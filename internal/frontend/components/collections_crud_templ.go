// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.865
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"git.iu7.bmstu.ru/ped22u691/PPO.git/internal/models/json_req_resp"
)

func CollectionsPage(tokenKey string, collections []jsonreqresp.CollectionResponse) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"crud-container\" id=\"collectionsContainer\"><!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è --><div class=\"modal\" id=\"collectionModal\" style=\"display: none;\"><div class=\"modal-content\" onclick=\"event.stopPropagation()\"><h3 id=\"modalTitle\">–î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é</h3><form id=\"collectionForm\" onsubmit=\"return handleFormSubmit(event)\"><input type=\"hidden\" id=\"collectionId\"><div class=\"form-group\"><label>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏</label> <input type=\"text\" id=\"collectionTitle\" required minlength=\"2\" maxlength=\"100\"></div><div class=\"form-actions\"><button type=\"button\" onclick=\"closeModal()\">–û—Ç–º–µ–Ω–∞</button> <button type=\"submit\" id=\"submitButton\">–î–æ–±–∞–≤–∏—Ç—å</button></div></form></div></div><!-- –û—Å–Ω–æ–≤–Ω–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å --><div class=\"crud-header\"><h2>–ö–æ–ª–ª–µ–∫—Ü–∏–∏</h2><button class=\"add-button\" onclick=\"resetAndOpenModal()\">+ –î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é</button></div><!-- –¢–∞–±–ª–∏—Ü–∞ –∫–æ–ª–ª–µ–∫—Ü–∏–π --><table class=\"crud-table\"><thead><tr><th>–ù–∞–∑–≤–∞–Ω–∏–µ</th><th>–î–µ–π—Å—Ç–≤–∏—è</th></tr></thead> <tbody>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			for _, collection := range collections {
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "<tr><td>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var3 string
				templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(collection.Title)
				if templ_7745c5c3_Err != nil {
					return templ.Error{Err: templ_7745c5c3_Err, FileName: `internal/frontend/components/collections_crud.templ`, Line: 57, Col: 50}
				}
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 3, "</td><td class=\"actions\">")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("prepareEditModal", collection.ID, collection.Title))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 4, "<button class=\"edit-btn\" onclick=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var4 templ.ComponentScript = templ.JSFuncCall("prepareEditModal", collection.ID, collection.Title)
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var4.Call)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 5, "\">‚úèÔ∏è</button> ")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templ.RenderScriptItems(ctx, templ_7745c5c3_Buffer, templ.JSFuncCall("confirmDeleteCollection", collection.ID))
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 6, "<button class=\"delete-btn\" onclick=\"")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				var templ_7745c5c3_Var5 templ.ComponentScript = templ.JSFuncCall("confirmDeleteCollection", collection.ID)
				_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ_7745c5c3_Var5.Call)
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
				templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 7, "\">üóëÔ∏è</button></td></tr>")
				if templ_7745c5c3_Err != nil {
					return templ_7745c5c3_Err
				}
			}
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 8, "</tbody></table><!-- –°–∫—Ä–∏–ø—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API --><script>\n                const ACCESS_TOKEN_KEY = \"@tokenKey\";\n                // –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ\n                let isEditing = false;\n                let currentCollection = {\n                    id: '',\n                    title: ''\n                };\n\n                // –≠–ª–µ–º–µ–Ω—Ç—ã DOM\n                const modal = document.getElementById('collectionModal');\n                const modalTitle = document.getElementById('modalTitle');\n                const submitButton = document.getElementById('submitButton');\n                const collectionForm = document.getElementById('collectionForm');\n                const collectionIdInput = document.getElementById('collectionId');\n                const collectionTitleInput = document.getElementById('collectionTitle');\n\n                // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞\n                function openModal() {\n                    modal.style.display = 'flex';\n                }\n\n                function closeModal() {\n                    modal.style.display = 'none';\n                }\n\n                // –ö–ª–∏–∫ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞\n                modal.addEventListener('click', function(e) {\n                    if (e.target === modal) {\n                        closeModal();\n                    }\n                });\n\n                function resetAndOpenModal() {\n                    isEditing = false;\n                    currentCollection = { id: '', title: '' };\n                    updateFormFields();\n                    modalTitle.textContent = '–î–æ–±–∞–≤–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é';\n                    submitButton.textContent = '–î–æ–±–∞–≤–∏—Ç—å';\n                    openModal();\n                }\n\n                function prepareEditModal(id, title) {\n                    isEditing = true;\n                    currentCollection = {\n                        id: id,\n                        title: title\n                    };\n                    updateFormFields();\n                    modalTitle.textContent = '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é';\n                    submitButton.textContent = '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å';\n                    openModal();\n                }\n\n                function updateFormFields() {\n                    collectionIdInput.value = currentCollection.id;\n                    collectionTitleInput.value = currentCollection.title;\n                }\n\n                async function handleFormSubmit(event) {\n                    event.preventDefault();\n                    \n                    const formData = {\n                        title: collectionTitleInput.value\n                    };\n\n                    if (isEditing) {\n                        formData.id = collectionIdInput.value;\n                        await updateCollection(formData);\n                    } else {\n                        await addCollection(formData);\n                    }\n                }\n\n                async function confirmDeleteCollection(id) {\n                    if (!confirm('–£–¥–∞–ª–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.')) return;\n                    await deleteCollection(id);\n                }\n\n                // API —Ñ—É–Ω–∫—Ü–∏–∏\n                async function fetchCollections() {\n                    try {\n                        const response = await fetch('/api/v1/employee/collections', {\n                            headers: {\n                                'Authorization': `Bearer ${localStorage.getItem(ACCESS_TOKEN_KEY)}`\n                            }\n                        });\n                        return await response.json();\n                    } catch (error) {\n                        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–π:', error);\n                        return [];\n                    }\n                }\n\n                async function addCollection(data) {\n                    try {\n                        const response = await fetch('/api/v1/employee/collections', {\n                            method: 'POST',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': `Bearer ${localStorage.getItem(ACCESS_TOKEN_KEY)}`\n                            },\n                            body: JSON.stringify(data)\n                        });\n\n                        if (!response.ok) throw await response.json();\n                        window.location.reload();\n                    } catch (error) {\n                        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', error);\n                        alert(error.error || '–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏');\n                    }\n                }\n\n                async function updateCollection(data) {\n                    try {\n                        const response = await fetch('/api/v1/employee/collections', {\n                            method: 'PUT',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': `Bearer ${localStorage.getItem(ACCESS_TOKEN_KEY)}`\n                            },\n                            body: JSON.stringify(data)\n                        });\n\n                        if (!response.ok) throw await response.json();\n                        window.location.reload();\n                    } catch (error) {\n                        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error);\n                        alert(error.error || '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏');\n                    }\n                }\n\n                async function deleteCollection(id) {\n                    try {\n                        const response = await fetch('/api/v1/employee/collections', {\n                            method: 'DELETE',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'Authorization': `Bearer ${localStorage.getItem(ACCESS_TOKEN_KEY)}`\n                            },\n                            body: JSON.stringify({ id })\n                        });\n \n                        if (!response.ok) throw await response.json();\n                        window.location.reload();\n                    } catch (error) {\n                        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);\n                        alert(error.error || '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–æ–ª–ª–µ–∫—Ü–∏—é');\n                    }\n                }\n            </script></div>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = EmployeesNavigate("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏—è–º–∏").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
