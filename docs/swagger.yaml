basePath: /api/v1
definitions:
  auth.LoginAdminRequest:
    properties:
      login:
        example: admin
        maxLength: 50
        type: string
      password:
        example: "12345678"
        minLength: 6
        type: string
    required:
    - login
    - password
    type: object
  auth.LoginEmployeeRequest:
    properties:
      login:
        example: elogin
        maxLength: 50
        minLength: 4
        type: string
      password:
        example: "12345678"
        minLength: 4
        type: string
    required:
    - login
    - password
    type: object
  auth.RegisterEmployeeRequest:
    properties:
      login:
        example: elogin
        maxLength: 50
        minLength: 4
        type: string
      password:
        example: "12345678"
        minLength: 4
        type: string
      username:
        example: ename
        maxLength: 50
        type: string
    required:
    - login
    - password
    - username
    type: object
  jsonreqresp.AddArtworkRequest:
    properties:
      authorID:
        example: cfd9ff5d-cb37-407c-b043-288a482e9239
        type: string
      collectionID:
        example: cfd9ff5d-cb37-407c-b043-288a482e9239
        type: string
      creationYear:
        example: 1889
        maximum: 2100
        type: integer
      material:
        example: Холст, масляные краски
        maxLength: 100
        type: string
      size:
        example: 73.7 × 92.1 см
        maxLength: 50
        type: string
      technic:
        example: Масло, холст
        maxLength: 100
        type: string
      title:
        example: Звёздная ночь
        maxLength: 255
        type: string
    required:
    - authorID
    - collectionID
    - creationYear
    - material
    - size
    - technic
    - title
    type: object
  jsonreqresp.AddAuthorRequest:
    properties:
      birthYear:
        description: Обязательное, >= 1000
        example: 1853
        minimum: 1000
        type: integer
      deathYear:
        description: Опциональное, >= BirthYear
        example: 1890
        type: integer
      name:
        description: Обязательное, 2-100 символов
        example: Винсент Ван Гог
        maxLength: 100
        minLength: 2
        type: string
    required:
    - birthYear
    - name
    type: object
  jsonreqresp.AddCollectionRequest:
    properties:
      title:
        description: Обязательное, 2-255 символов
        example: Музей современного искусства
        maxLength: 255
        minLength: 2
        type: string
    required:
    - title
    type: object
  jsonreqresp.AddEventRequest:
    properties:
      address:
        example: ул. Пречистенка, 12/2
        maxLength: 500
        type: string
      artworkIDs:
        items:
          type: string
        type: array
      canVisit:
        example: true
        type: boolean
      cntTickets:
        example: 100
        minimum: 0
        type: integer
      dateBegin:
        example: "2023-06-15T10:00:00Z"
        type: string
      dateEnd:
        example: "2023-09-20T18:00:00Z"
        type: string
      title:
        example: Ночная выставка
        maxLength: 255
        type: string
    required:
    - address
    - canVisit
    - cntTickets
    - dateBegin
    - dateEnd
    - title
    type: object
  jsonreqresp.ArtworkResponse:
    properties:
      author:
        $ref: '#/definitions/jsonreqresp.AuthorResponse'
      collection:
        $ref: '#/definitions/jsonreqresp.CollectionResponse'
      creationYear:
        example: 1503
        type: integer
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      material:
        example: Poplar wood
        type: string
      size:
        example: 77 cm × 53 cm
        type: string
      technic:
        example: Oil painting
        type: string
      title:
        example: Mona Lisa
        type: string
    type: object
  jsonreqresp.AuthorResponse:
    properties:
      birthYear:
        example: 1452
        type: integer
      deathYear:
        example: 1519
        type: integer
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      name:
        example: Leonardo da Vinci
        type: string
    type: object
  jsonreqresp.BuyTicketRequest:
    properties:
      CustomerEmail:
        example: myname@test.ru
        maxLength: 100
        type: string
      cntTickets:
        example: 1
        minimum: 0
        type: integer
      customerName:
        example: myname
        maxLength: 100
        type: string
      eventID:
        example: b10f841d-ba75-48df-a9cf-c86fc9bd3041
        type: string
    required:
    - cntTickets
    - eventID
    type: object
  jsonreqresp.CollectionResponse:
    properties:
      id:
        example: aa1e8400-e29b-41d4-a716-446655441111
        type: string
      title:
        example: Louvre Museum Collection
        type: string
    type: object
  jsonreqresp.ConArtworkEventRequest:
    properties:
      artworkID:
        type: string
    required:
    - artworkID
    type: object
  jsonreqresp.ConfirmCancelTxRequest:
    properties:
      txID:
        example: b10f841d-ba75-48df-a9cf-c86fc9bd3041
        type: string
    required:
    - txID
    type: object
  jsonreqresp.DeleteArtworkRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  jsonreqresp.DeleteAuthorRequest:
    properties:
      id:
        example: cfd9ff5d-cb37-407c-b043-288a482e9239
        type: string
    required:
    - id
    type: object
  jsonreqresp.DeleteCollectionRequest:
    properties:
      id:
        example: cfd9ff5d-cb37-407c-b043-288a482e9239
        type: string
    required:
    - id
    type: object
  jsonreqresp.DeleteEventRequest:
    properties:
      id:
        type: string
    required:
    - id
    type: object
  jsonreqresp.EmployeeResponse:
    properties:
      adminId:
        example: bb2e8400-e29b-41d4-a716-446655443333
        type: string
      createdAt:
        example: "2023-01-01T00:00:00Z"
        type: string
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      login:
        example: johndoe@example.com
        type: string
      username:
        example: john doe
        type: string
      valid:
        example: true
        type: boolean
    type: object
  jsonreqresp.EventResponse:
    properties:
      address:
        example: ул. Пречистенка, 12/2
        type: string
      artworkIDs:
        items:
          type: string
        type: array
      canVisit:
        example: true
        type: boolean
      cntTickets:
        example: 150
        type: integer
      dateBegin:
        example: "2023-06-15T10:00:00Z"
        type: string
      dateEnd:
        example: "2023-09-20T18:00:00Z"
        type: string
      employeeID:
        example: cfd9ff5d-cb37-407c-b043-288a482e9239
        type: string
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      title:
        example: Выставка импрессионистов
        type: string
      valid:
        example: true
        type: boolean
    type: object
  jsonreqresp.StatCollectionsResponse:
    properties:
      CntArtworks:
        type: integer
      ColID:
        type: string
      ColTitle:
        type: string
    type: object
  jsonreqresp.TicketPurchaseResponse:
    properties:
      customerEmail:
        type: string
      customerName:
        type: string
      eventId:
        type: string
      id:
        type: string
      purchaseDate:
        type: string
      userId:
        type: string
    type: object
  jsonreqresp.TxTicketPurchaseResponse:
    properties:
      cntTickets:
        type: integer
      expiredAt:
        type: string
      ticketPurchase:
        $ref: '#/definitions/jsonreqresp.TicketPurchaseResponse'
    type: object
  jsonreqresp.UpdateArtworkRequest:
    properties:
      authorID:
        example: cfd9ff5d-cb37-407c-b043-288a482e9239
        type: string
      collectionID:
        example: cfd9ff5d-cb37-407c-b043-288a482e9239
        type: string
      creationYear:
        example: 1889
        maximum: 2100
        type: integer
      id:
        example: 44a315d0-663c-4813-92a6-d7977c2f2aba
        type: string
      material:
        example: Холст, масляные краски
        maxLength: 100
        type: string
      size:
        example: 73.7 × 92.1 см
        maxLength: 50
        type: string
      technic:
        example: Масло, холст
        maxLength: 100
        type: string
      title:
        example: Звёздная ночь
        maxLength: 255
        type: string
    required:
    - authorID
    - collectionID
    - creationYear
    - id
    - material
    - size
    - technic
    - title
    type: object
  jsonreqresp.UpdateAuthorRequest:
    properties:
      birthYear:
        description: Обязательное, >= 1000
        example: 1853
        minimum: 1000
        type: integer
      deathYear:
        description: Опциональное, >= BirthYear
        example: 1890
        type: integer
      id:
        example: cfd9ff5d-cb37-407c-b043-288a482e9239
        type: string
      name:
        description: Обязательное, 2-100 символов
        example: Винсент Ван Гог
        maxLength: 100
        minLength: 2
        type: string
    required:
    - birthYear
    - id
    - name
    type: object
  jsonreqresp.UpdateCollectionRequest:
    properties:
      id:
        example: cfd9ff5d-cb37-407c-b043-288a482e9239
        type: string
      title:
        description: Обязательное, 2-255 символов
        example: Музей современного искусства
        maxLength: 255
        minLength: 2
        type: string
    required:
    - id
    - title
    type: object
  jsonreqresp.UpdateEventRequest:
    properties:
      address:
        example: ул. Пречистенка, 12/2
        maxLength: 500
        type: string
      canVisit:
        example: true
        type: boolean
      cntTickets:
        example: 100
        minimum: 0
        type: integer
      dateBegin:
        example: "2023-06-15T10:00:00Z"
        type: string
      dateEnd:
        example: "2023-09-20T18:00:00Z"
        type: string
      id:
        example: 44a315d0-663c-4813-92a6-d7977c2f2aba
        type: string
      title:
        example: Ночная выставка
        maxLength: 255
        type: string
    required:
    - address
    - canVisit
    - cntTickets
    - dateBegin
    - dateEnd
    - id
    - title
    type: object
  jsonreqresp.UpdateValidEmployeeRequest:
    properties:
      id:
        example: bb2e8400-e29b-41d4-a716-446655442222
        type: string
      valid:
        example: true
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: API для системы учета произведений искусств
  title: Музей
  version: "1.0"
paths:
  /admin/employeelist/:
    get:
      consumes:
      - application/json
      description: Возвращает список всех сотрудников
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.EmployeeResponse'
            type: array
        "401":
          description: Не авторизован
      security:
      - ApiKeyAuth: []
      summary: Получить всех сотрудников
      tags:
      - Администратор
  /admin/employeelist/change-rights:
    put:
      consumes:
      - application/json
      description: Изменяет поле valid сотрудника
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для обновления
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.UpdateValidEmployeeRequest'
      responses:
        "200":
          description: Успешное обновление
        "404":
          description: Сотрудник не найден
      security:
      - ApiKeyAuth: []
      summary: Изменить права сотрудника
      tags:
      - Администратор
  /admin/employeelist/register-employee:
    post:
      consumes:
      - application/json
      description: Регистрирует нового сотрудника
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterEmployeeRequest'
      responses:
        "200":
          description: Сотрудник зарегистрирован
        "400":
          description: Неверные входные параметры
        "401":
          description: Ошибка авторизации
        "409":
          description: Попытка повторной регистрации
      security:
      - ApiKeyAuth: []
      summary: Регистрация сотрудника
      tags:
      - Администратор
  /admin/userlist/:
    get:
      consumes:
      - application/json
      description: Возвращает список всех пользователей
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.EmployeeResponse'
            type: array
        "401":
          description: Не авторизован
      security:
      - ApiKeyAuth: []
      summary: Получить всех пользователей
      tags:
      - Администратор
  /auth-admin/login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует администратора и возвращает токен доступа
      parameters:
      - description: Учетные данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginAdminRequest'
      responses:
        "200":
          description: Администратор успешно аутентифицирован
        "400":
          description: Неверные входные параметры
        "401":
          description: Ошибка аутентификации
        "403":
          description: Нет прав доступа
      summary: Вход администратора
      tags:
      - Аутентификация
  /auth-employee/login:
    post:
      consumes:
      - application/json
      description: Аутентифицирует сотрудника и возвращает токен доступа
      parameters:
      - description: Учетные данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginEmployeeRequest'
      responses:
        "200":
          description: Сотрудник успешно аутентифицирован
        "400":
          description: Неверные входные параметры
        "401":
          description: Ошибка аутентификации
        "403":
          description: Нет прав доступа
      summary: Вход сотрудника
      tags:
      - Аутентификация
  /employee/artworks:
    delete:
      consumes:
      - application/json
      description: Удаляет существующее произведение искусства
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для удаления произведения
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.DeleteArtworkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно удалено
        "400":
          description: Неверный запрос
        "404":
          description: Не найдено
      security:
      - ApiKeyAuth: []
      summary: Удалить произведение (сотрудник)
      tags:
      - Экспонаты
    get:
      consumes:
      - application/json
      description: Возвращает список всех произведений искусства
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.ArtworkResponse'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить все произведения (сотрудник)
      tags:
      - Экспонаты
    post:
      consumes:
      - application/json
      description: Добавляет произведение с уже созданными автором и коллекцией
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Новое произведение с существующими автором и коллекцией
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.AddArtworkRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Произведение добавлено
        "400":
          description: Неверные входные параметры
        "404":
          description: Не найдено
      security:
      - ApiKeyAuth: []
      summary: Добавить произведение (сотрудник)
      tags:
      - Экспонаты
    put:
      consumes:
      - application/json
      description: Обновляет произведение с новыми/существующими автором и коллекцией
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Обновляемые данные произведения с автором и коллекцией
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.UpdateArtworkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Произведение обновлено
        "400":
          description: Неверные входные параметры
        "404":
          description: Не найдено
      security:
      - ApiKeyAuth: []
      summary: Обновить произведение (сотрудник)
      tags:
      - Экспонаты
  /employee/authors:
    delete:
      consumes:
      - application/json
      description: Удаляет существующего автора
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для удаления автора
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.DeleteAuthorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно удалено
        "400":
          description: Неверный запрос
        "404":
          description: Автор не найден
        "409":
          description: Конфликт - у автора есть связанные произведения
      security:
      - ApiKeyAuth: []
      summary: Удалить автора (сотрудник)
      tags:
      - Авторы
    get:
      description: Возвращает список всех авторов
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.AuthorResponse'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить всех авторов (сотрудник)
      tags:
      - Авторы
    post:
      consumes:
      - application/json
      description: Создает нового автора
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные автора
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.AddAuthorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Автор создан
        "400":
          description: Неверный запрос
      security:
      - ApiKeyAuth: []
      summary: Добавить нового автора (сотрудник)
      tags:
      - Авторы
    put:
      consumes:
      - application/json
      description: Обновляет данные существующего автора
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для обновления автора
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.UpdateAuthorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно обновлено
        "400":
          description: Неверный запрос
        "404":
          description: Автор не найден
      security:
      - ApiKeyAuth: []
      summary: Обновить автора (сотрудник)
      tags:
      - Авторы
  /employee/collections:
    delete:
      consumes:
      - application/json
      description: Удаляет существующую коллекцию
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для удаления коллекции
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.DeleteCollectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Коллекция удалена
        "400":
          description: Неверный запрос
        "404":
          description: Коллекция не найдена
      security:
      - ApiKeyAuth: []
      summary: Удалить коллекцию (сотрудник)
      tags:
      - Коллекции
    get:
      description: Возвращает список всех коллекций
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.CollectionResponse'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить все коллекции (сотрудник)
      tags:
      - Коллекции
    post:
      consumes:
      - application/json
      description: Создает новую коллекцию
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные коллекции
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.AddCollectionRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Коллекция создана
        "400":
          description: Неверный запрос
      security:
      - ApiKeyAuth: []
      summary: Добавить новую коллекцию (сотрудник)
      tags:
      - Коллекции
    put:
      consumes:
      - application/json
      description: Обновляет существующую коллекцию
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для обновления коллекции
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.UpdateCollectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Коллекция обновлена
        "400":
          description: Неверный запрос
        "404":
          description: Коллекция не найдена
      security:
      - ApiKeyAuth: []
      summary: Обновить коллекцию (сотрудник)
      tags:
      - Коллекции
  /employee/events:
    delete:
      consumes:
      - application/json
      description: Удаляет существующее мероприятие
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для удаления мероприятия
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.DeleteEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Мероприятие успешно удалено
        "400":
          description: Неверный запрос - ошибка валидации
        "404":
          description: Не найдено - мероприятие не найдено
      security:
      - ApiKeyAuth: []
      summary: Удалить мероприятие (сотрудник)
      tags:
      - Мероприятия
    get:
      description: Возвращает список всех мероприятий
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.EventResponse'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Получить все мероприятия (сотрудник)
      tags:
      - Мероприятия
    post:
      consumes:
      - application/json
      description: Создает новое мероприятие
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные мероприятия
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.AddEventRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Мероприятие успешно создано
        "400":
          description: Неверный запрос - ошибка валидации
        "401":
          description: Не авторизован
        "404":
          description: Не найдено - сотрудник не найден
      security:
      - ApiKeyAuth: []
      summary: Добавить новое мероприятие (сотрудник)
      tags:
      - Мероприятия
    put:
      consumes:
      - application/json
      description: Обновляет существующее мероприятие
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: Данные для обновления мероприятия
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.UpdateEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Мероприятие успешно обновлено
        "400":
          description: Неверный запрос - ошибка валидации
        "404":
          description: Не найдено - мероприятие не найдено
      security:
      - ApiKeyAuth: []
      summary: Обновить мероприятие (сотрудник)
      tags:
      - Мероприятия
  /employee/events/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет произведение из существующего мероприятия
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID мероприятия
        in: path
        name: id
        required: true
        type: string
      - description: Данные для связи произведения с мероприятием
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.ConArtworkEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Произведение успешно удалено из мероприятия
        "400":
          description: Неверный запрос - ошибка валидации
        "404":
          description: Не найдено - мероприятие или произведение не найдено
      security:
      - ApiKeyAuth: []
      summary: Удалить произведение из мероприятия (сотрудник)
      tags:
      - Мероприятия
    put:
      consumes:
      - application/json
      description: Добавляет произведение к существующему мероприятию
      parameters:
      - description: Bearer токен
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID мероприятия
        in: path
        name: id
        required: true
        type: string
      - description: Данные для связи произведения с мероприятием
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.ConArtworkEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Произведение успешно добавлено к мероприятию
        "400":
          description: Неверный запрос - ошибка валидации или дублирование произведения
        "404":
          description: Не найдено - мероприятие или произведение не найдено
      security:
      - ApiKeyAuth: []
      summary: Добавить произведение к мероприятию (сотрудник)
      tags:
      - Мероприятия
  /employee/events/{id}/artworks:
    get:
      consumes:
      - application/json
      description: Возвращает список всех произведений данного мероприятия
      parameters:
      - description: bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: ID мероприятия
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.ArtworkResponse'
            type: array
        "400":
          description: Неверный запрос - ошибка валидации
        "404":
          description: Не найдено - мероприятие или произведение не найдено
      security:
      - ApiKeyAuth: []
      summary: Получить все произведения мероприятия (сотрудник)
      tags:
      - Мероприятия
  /guest/tickets:
    post:
      consumes:
      - application/json
      description: Покупка билетов на указанное мероприятие
      parameters:
      - description: Данные для покупки билетов
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.BuyTicketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Данные покупки сохраняются в cookie
          schema:
            $ref: '#/definitions/jsonreqresp.TxTicketPurchaseResponse'
        "400":
          description: Неверный формат запроса
        "401":
          description: Не авторизован
        "404":
          description: Мероприятие не найдено
        "409":
          description: Нет доступных билетов
        "410":
          description: Транзакция просрочена
      summary: Покупка билетов
      tags:
      - Билеты
  /guest/tickets/cancel:
    put:
      consumes:
      - application/json
      description: Отменяет ожидающую транзакцию покупки билетов
      parameters:
      - description: ID транзакции
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.ConfirmCancelTxRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Покупка отменена
        "400":
          description: Неверный запрос
        "404":
          description: Транзакция не найдена
        "410":
          description: Транзакция просрочена
      summary: Отменить покупку
      tags:
      - Билеты
  /guest/tickets/confirm:
    put:
      consumes:
      - application/json
      description: Подтверждает ожидающую транзакцию покупки билетов
      parameters:
      - description: ID транзакции
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/jsonreqresp.ConfirmCancelTxRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Покупка подтверждена
        "400":
          description: Неверный запрос
        "404":
          description: Транзакция не найдена
        "410":
          description: Транзакция просрочена
      summary: Подтвердить покупку
      tags:
      - Билеты
  /museum/artworks:
    get:
      consumes:
      - application/json
      description: Возвращает список всех произведений с возможностью фильтрации
      parameters:
      - description: Фильтр по названию произведения (макс. 255 символов)
        in: query
        maxLength: 255
        name: title
        type: string
      - description: Фильтр по имени автора (макс. 100 символов)
        in: query
        maxLength: 100
        name: author_name
        type: string
      - description: Фильтр по названию коллекции (макс. 255 символов)
        in: query
        maxLength: 255
        name: collection_title
        type: string
      - description: Фильтр по ID мероприятия
        format: uuid
        in: query
        name: event_id
        type: string
      - description: Поле для сортировки
        enum:
        - title
        - author_name
        - creationYear
        in: query
        name: sort_field
        required: true
        type: string
      - description: Направление сортировки
        enum:
        - ASC
        - DESC
        in: query
        name: direction_sort
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.ArtworkResponse'
            type: array
      summary: Получить произведения
      tags:
      - Поиск
  /museum/events:
    get:
      consumes:
      - application/json
      description: Возвращает список всех мероприятий с возможностью фильтрации
      parameters:
      - description: Фильтр по названию мероприятия
        in: query
        maxLength: 255
        name: title
        type: string
      - description: 'Фильтр по минимальной дате начала (формат: ГГГГ-ММ-ДД)'
        format: date
        in: query
        name: date_begin
        type: string
      - description: 'Фильтр по максимальной дате окончания (формат: ГГГГ-ММ-ДД)'
        format: date
        in: query
        name: date_end
        type: string
      - description: Фильтр по доступности для посещения
        in: query
        name: can_visit
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.EventResponse'
            type: array
        "400":
          description: Неверный формат даты. Используйте ГГГГ-ММ-ДД
      summary: Получить мероприятия
      tags:
      - Поиск
  /museum/events/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает одно мероприятие по его идентификатору
      parameters:
      - description: ID мероприятия
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/jsonreqresp.EventResponse'
        "400":
          description: Неверный формат ID
        "404":
          description: Мероприятие не найдено
      summary: Получить мероприятие по ID
      tags:
      - Поиск
  /museum/events/{id}/artworks:
    get:
      consumes:
      - application/json
      description: Возвращает список всех произведений данного мероприятия
      parameters:
      - description: ID мероприятия
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.ArtworkResponse'
            type: array
        "400":
          description: Неверный запрос - ошибка валидации
        "404":
          description: Не найдено - мероприятие или произведение не найдено
      summary: Получить все произведения мероприятия
      tags:
      - Поиск
  /museum/events/{id}/statcols:
    get:
      consumes:
      - application/json
      description: Возвращает список коллекиций произведения искусства из которых
        участвуют в выставке
      parameters:
      - description: ID мероприятия
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/jsonreqresp.StatCollectionsResponse'
            type: array
        "400":
          description: Неверный запрос - ошибка валидации
        "404":
          description: Не найдено - мероприятие или произведение не найдено
      summary: Получить статистику по коллекциям для мероприятия
      tags:
      - Поиск
swagger: "2.0"
