{
    "swagger": "2.0",
    "info": {
        "description": "API для системы учета произведений искусств",
        "title": "Музей",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/admin/employeelist/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех сотрудников",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Администратор"
                ],
                "summary": "Получить всех сотрудников",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.EmployeeResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован"
                    }
                }
            }
        },
        "/admin/employeelist/change-rights": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Изменяет поле valid сотрудника",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Администратор"
                ],
                "summary": "Изменить права сотрудника",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.UpdateValidEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное обновление"
                    },
                    "404": {
                        "description": "Сотрудник не найден"
                    }
                }
            }
        },
        "/admin/employeelist/register-employee": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Регистрирует нового сотрудника",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Администратор"
                ],
                "summary": "Регистрация сотрудника",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для регистрации",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сотрудник зарегистрирован"
                    },
                    "400": {
                        "description": "Неверные входные параметры"
                    },
                    "401": {
                        "description": "Ошибка авторизации"
                    },
                    "409": {
                        "description": "Попытка повторной регистрации"
                    }
                }
            }
        },
        "/admin/userlist/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех пользователей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Администратор"
                ],
                "summary": "Получить всех пользователей",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.EmployeeResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Не авторизован"
                    }
                }
            }
        },
        "/auth-admin/login": {
            "post": {
                "description": "Аутентифицирует администратора и возвращает токен доступа",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Вход администратора",
                "parameters": [
                    {
                        "description": "Учетные данные для входа",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Администратор успешно аутентифицирован"
                    },
                    "400": {
                        "description": "Неверные входные параметры"
                    },
                    "401": {
                        "description": "Ошибка аутентификации"
                    },
                    "403": {
                        "description": "Нет прав доступа"
                    }
                }
            }
        },
        "/auth-employee/login": {
            "post": {
                "description": "Аутентифицирует сотрудника и возвращает токен доступа",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Аутентификация"
                ],
                "summary": "Вход сотрудника",
                "parameters": [
                    {
                        "description": "Учетные данные для входа",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сотрудник успешно аутентифицирован"
                    },
                    "400": {
                        "description": "Неверные входные параметры"
                    },
                    "401": {
                        "description": "Ошибка аутентификации"
                    },
                    "403": {
                        "description": "Нет прав доступа"
                    }
                }
            }
        },
        "/employee/artworks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех произведений искусства",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Экспонаты"
                ],
                "summary": "Получить все произведения (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.ArtworkResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет произведение с новыми/существующими автором и коллекцией",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Экспонаты"
                ],
                "summary": "Обновить произведение (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Обновляемые данные произведения с автором и коллекцией",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.UpdateArtworkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Произведение обновлено"
                    },
                    "400": {
                        "description": "Неверные входные параметры"
                    },
                    "404": {
                        "description": "Не найдено"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет произведение с уже созданными автором и коллекцией",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Экспонаты"
                ],
                "summary": "Добавить произведение (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Новое произведение с существующими автором и коллекцией",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.AddArtworkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Произведение добавлено"
                    },
                    "400": {
                        "description": "Неверные входные параметры"
                    },
                    "404": {
                        "description": "Не найдено"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет существующее произведение искусства",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Экспонаты"
                ],
                "summary": "Удалить произведение (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для удаления произведения",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.DeleteArtworkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно удалено"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "404": {
                        "description": "Не найдено"
                    }
                }
            }
        },
        "/employee/authors": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех авторов",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторы"
                ],
                "summary": "Получить всех авторов (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.AuthorResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет данные существующего автора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторы"
                ],
                "summary": "Обновить автора (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления автора",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.UpdateAuthorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно обновлено"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "404": {
                        "description": "Автор не найден"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает нового автора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторы"
                ],
                "summary": "Добавить нового автора (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные автора",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.AddAuthorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Автор создан"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет существующего автора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторы"
                ],
                "summary": "Удалить автора (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для удаления автора",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.DeleteAuthorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешно удалено"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "404": {
                        "description": "Автор не найден"
                    },
                    "409": {
                        "description": "Конфликт - у автора есть связанные произведения"
                    }
                }
            }
        },
        "/employee/collections": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех коллекций",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Коллекции"
                ],
                "summary": "Получить все коллекции (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.CollectionResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет существующую коллекцию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Коллекции"
                ],
                "summary": "Обновить коллекцию (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления коллекции",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.UpdateCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Коллекция обновлена"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "404": {
                        "description": "Коллекция не найдена"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новую коллекцию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Коллекции"
                ],
                "summary": "Добавить новую коллекцию (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные коллекции",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.AddCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Коллекция создана"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет существующую коллекцию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Коллекции"
                ],
                "summary": "Удалить коллекцию (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для удаления коллекции",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.DeleteCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Коллекция удалена"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "404": {
                        "description": "Коллекция не найдена"
                    }
                }
            }
        },
        "/employee/events": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех мероприятий",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Мероприятия"
                ],
                "summary": "Получить все мероприятия (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer токен",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.EventResponse"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновляет существующее мероприятие",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Мероприятия"
                ],
                "summary": "Обновить мероприятие (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer токен",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления мероприятия",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.UpdateEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Мероприятие успешно обновлено"
                    },
                    "400": {
                        "description": "Неверный запрос - ошибка валидации"
                    },
                    "404": {
                        "description": "Не найдено - мероприятие не найдено"
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает новое мероприятие",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Мероприятия"
                ],
                "summary": "Добавить новое мероприятие (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer токен",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные мероприятия",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.AddEventRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Мероприятие успешно создано"
                    },
                    "400": {
                        "description": "Неверный запрос - ошибка валидации"
                    },
                    "401": {
                        "description": "Не авторизован"
                    },
                    "404": {
                        "description": "Не найдено - сотрудник не найден"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет существующее мероприятие",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Мероприятия"
                ],
                "summary": "Удалить мероприятие (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer токен",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Данные для удаления мероприятия",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.DeleteEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Мероприятие успешно удалено"
                    },
                    "400": {
                        "description": "Неверный запрос - ошибка валидации"
                    },
                    "404": {
                        "description": "Не найдено - мероприятие не найдено"
                    }
                }
            }
        },
        "/employee/events/{id}": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Добавляет произведение к существующему мероприятию",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Мероприятия"
                ],
                "summary": "Добавить произведение к мероприятию (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer токен",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID мероприятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для связи произведения с мероприятием",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.ConArtworkEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Произведение успешно добавлено к мероприятию"
                    },
                    "400": {
                        "description": "Неверный запрос - ошибка валидации или дублирование произведения"
                    },
                    "404": {
                        "description": "Не найдено - мероприятие или произведение не найдено"
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удаляет произведение из существующего мероприятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Мероприятия"
                ],
                "summary": "Удалить произведение из мероприятия (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer токен",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID мероприятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для связи произведения с мероприятием",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.ConArtworkEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Произведение успешно удалено из мероприятия"
                    },
                    "400": {
                        "description": "Неверный запрос - ошибка валидации"
                    },
                    "404": {
                        "description": "Не найдено - мероприятие или произведение не найдено"
                    }
                }
            }
        },
        "/employee/events/{id}/artworks": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список всех произведений данного мероприятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Мероприятия"
                ],
                "summary": "Получить все произведения мероприятия (сотрудник)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID мероприятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.ArtworkResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос - ошибка валидации"
                    },
                    "404": {
                        "description": "Не найдено - мероприятие или произведение не найдено"
                    }
                }
            }
        },
        "/guest/tickets": {
            "post": {
                "description": "Покупка билетов на указанное мероприятие",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Билеты"
                ],
                "summary": "Покупка билетов",
                "parameters": [
                    {
                        "description": "Данные для покупки билетов",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.BuyTicketRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Данные покупки сохраняются в cookie",
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.TxTicketPurchaseResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса"
                    },
                    "401": {
                        "description": "Не авторизован"
                    },
                    "404": {
                        "description": "Мероприятие не найдено"
                    },
                    "409": {
                        "description": "Нет доступных билетов"
                    },
                    "410": {
                        "description": "Транзакция просрочена"
                    }
                }
            }
        },
        "/guest/tickets/cancel": {
            "put": {
                "description": "Отменяет ожидающую транзакцию покупки билетов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Билеты"
                ],
                "summary": "Отменить покупку",
                "parameters": [
                    {
                        "description": "ID транзакции",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.ConfirmCancelTxRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Покупка отменена"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "404": {
                        "description": "Транзакция не найдена"
                    },
                    "410": {
                        "description": "Транзакция просрочена"
                    }
                }
            }
        },
        "/guest/tickets/confirm": {
            "put": {
                "description": "Подтверждает ожидающую транзакцию покупки билетов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Билеты"
                ],
                "summary": "Подтвердить покупку",
                "parameters": [
                    {
                        "description": "ID транзакции",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.ConfirmCancelTxRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Покупка подтверждена"
                    },
                    "400": {
                        "description": "Неверный запрос"
                    },
                    "404": {
                        "description": "Транзакция не найдена"
                    },
                    "410": {
                        "description": "Транзакция просрочена"
                    }
                }
            }
        },
        "/museum/artworks": {
            "get": {
                "description": "Возвращает список всех произведений с возможностью фильтрации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск"
                ],
                "summary": "Получить произведения",
                "parameters": [
                    {
                        "maxLength": 255,
                        "type": "string",
                        "description": "Фильтр по названию произведения (макс. 255 символов)",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "maxLength": 100,
                        "type": "string",
                        "description": "Фильтр по имени автора (макс. 100 символов)",
                        "name": "author_name",
                        "in": "query"
                    },
                    {
                        "maxLength": 255,
                        "type": "string",
                        "description": "Фильтр по названию коллекции (макс. 255 символов)",
                        "name": "collection_title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Фильтр по ID мероприятия",
                        "name": "event_id",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "title",
                            "author_name",
                            "creationYear"
                        ],
                        "type": "string",
                        "description": "Поле для сортировки",
                        "name": "sort_field",
                        "in": "query",
                        "required": true
                    },
                    {
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "type": "string",
                        "description": "Направление сортировки",
                        "name": "direction_sort",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.ArtworkResponse"
                            }
                        }
                    }
                }
            }
        },
        "/museum/events": {
            "get": {
                "description": "Возвращает список всех мероприятий с возможностью фильтрации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск"
                ],
                "summary": "Получить мероприятия",
                "parameters": [
                    {
                        "maxLength": 255,
                        "type": "string",
                        "description": "Фильтр по названию мероприятия",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Фильтр по минимальной дате начала (формат: ГГГГ-ММ-ДД)",
                        "name": "date_begin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "Фильтр по максимальной дате окончания (формат: ГГГГ-ММ-ДД)",
                        "name": "date_end",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Фильтр по доступности для посещения",
                        "name": "can_visit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.EventResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный формат даты. Используйте ГГГГ-ММ-ДД"
                    }
                }
            }
        },
        "/museum/events/{id}": {
            "get": {
                "description": "Возвращает одно мероприятие по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск"
                ],
                "summary": "Получить мероприятие по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID мероприятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.EventResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат ID"
                    },
                    "404": {
                        "description": "Мероприятие не найдено"
                    }
                }
            }
        },
        "/museum/events/{id}/artworks": {
            "get": {
                "description": "Возвращает список всех произведений данного мероприятия",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Поиск"
                ],
                "summary": "Получить все произведения мероприятия",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID мероприятия",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.ArtworkResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Неверный запрос - ошибка валидации"
                    },
                    "404": {
                        "description": "Не найдено - мероприятие или произведение не найдено"
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginAdminRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "12345678"
                }
            }
        },
        "auth.LoginEmployeeRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "elogin"
                },
                "password": {
                    "type": "string",
                    "minLength": 4,
                    "example": "12345678"
                }
            }
        },
        "auth.RegisterEmployeeRequest": {
            "type": "object",
            "required": [
                "login",
                "password",
                "username"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "elogin"
                },
                "password": {
                    "type": "string",
                    "minLength": 4,
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "ename"
                }
            }
        },
        "jsonreqresp.AddArtworkRequest": {
            "type": "object",
            "required": [
                "authorID",
                "collectionID",
                "creationYear",
                "material",
                "size",
                "technic",
                "title"
            ],
            "properties": {
                "authorID": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                },
                "collectionID": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                },
                "creationYear": {
                    "type": "integer",
                    "maximum": 2100,
                    "example": 1889
                },
                "material": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Холст, масляные краски"
                },
                "size": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "73.7 × 92.1 см"
                },
                "technic": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Масло, холст"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Звёздная ночь"
                }
            }
        },
        "jsonreqresp.AddAuthorRequest": {
            "type": "object",
            "required": [
                "birthYear",
                "name"
            ],
            "properties": {
                "birthYear": {
                    "description": "Обязательное, \u003e= 1000",
                    "type": "integer",
                    "minimum": 1000,
                    "example": 1853
                },
                "deathYear": {
                    "description": "Опциональное, \u003e= BirthYear",
                    "type": "integer",
                    "example": 1890
                },
                "name": {
                    "description": "Обязательное, 2-100 символов",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "Винсент Ван Гог"
                }
            }
        },
        "jsonreqresp.AddCollectionRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "description": "Обязательное, 2-255 символов",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2,
                    "example": "Музей современного искусства"
                }
            }
        },
        "jsonreqresp.AddEventRequest": {
            "type": "object",
            "required": [
                "address",
                "canVisit",
                "cntTickets",
                "dateBegin",
                "dateEnd",
                "title"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "ул. Пречистенка, 12/2"
                },
                "artworkIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "canVisit": {
                    "type": "boolean",
                    "example": true
                },
                "cntTickets": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 100
                },
                "dateBegin": {
                    "type": "string",
                    "example": "2023-06-15T10:00:00Z"
                },
                "dateEnd": {
                    "type": "string",
                    "example": "2023-09-20T18:00:00Z"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Ночная выставка"
                }
            }
        },
        "jsonreqresp.ArtworkResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/jsonreqresp.AuthorResponse"
                },
                "collection": {
                    "$ref": "#/definitions/jsonreqresp.CollectionResponse"
                },
                "creationYear": {
                    "type": "integer",
                    "example": 1503
                },
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "material": {
                    "type": "string",
                    "example": "Poplar wood"
                },
                "size": {
                    "type": "string",
                    "example": "77 cm × 53 cm"
                },
                "technic": {
                    "type": "string",
                    "example": "Oil painting"
                },
                "title": {
                    "type": "string",
                    "example": "Mona Lisa"
                }
            }
        },
        "jsonreqresp.AuthorResponse": {
            "type": "object",
            "properties": {
                "birthYear": {
                    "type": "integer",
                    "example": 1452
                },
                "deathYear": {
                    "type": "integer",
                    "example": 1519
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "type": "string",
                    "example": "Leonardo da Vinci"
                }
            }
        },
        "jsonreqresp.BuyTicketRequest": {
            "type": "object",
            "required": [
                "cntTickets",
                "eventID"
            ],
            "properties": {
                "CustomerEmail": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "myname@test.ru"
                },
                "cntTickets": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 1
                },
                "customerName": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "myname"
                },
                "eventID": {
                    "type": "string",
                    "example": "b10f841d-ba75-48df-a9cf-c86fc9bd3041"
                }
            }
        },
        "jsonreqresp.CollectionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "aa1e8400-e29b-41d4-a716-446655441111"
                },
                "title": {
                    "type": "string",
                    "example": "Louvre Museum Collection"
                }
            }
        },
        "jsonreqresp.ConArtworkEventRequest": {
            "type": "object",
            "required": [
                "artworkID"
            ],
            "properties": {
                "artworkID": {
                    "type": "string"
                }
            }
        },
        "jsonreqresp.ConfirmCancelTxRequest": {
            "type": "object",
            "required": [
                "txID"
            ],
            "properties": {
                "txID": {
                    "type": "string",
                    "example": "b10f841d-ba75-48df-a9cf-c86fc9bd3041"
                }
            }
        },
        "jsonreqresp.DeleteArtworkRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "jsonreqresp.DeleteAuthorRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                }
            }
        },
        "jsonreqresp.DeleteCollectionRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                }
            }
        },
        "jsonreqresp.DeleteEventRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "jsonreqresp.EmployeeResponse": {
            "type": "object",
            "properties": {
                "adminId": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655443333"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "login": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "username": {
                    "type": "string",
                    "example": "john doe"
                },
                "valid": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "jsonreqresp.EventResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "ул. Пречистенка, 12/2"
                },
                "artworkIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "canVisit": {
                    "type": "boolean",
                    "example": true
                },
                "cntTickets": {
                    "type": "integer",
                    "example": 150
                },
                "dateBegin": {
                    "type": "string",
                    "example": "2023-06-15T10:00:00Z"
                },
                "dateEnd": {
                    "type": "string",
                    "example": "2023-09-20T18:00:00Z"
                },
                "employeeID": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                },
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "title": {
                    "type": "string",
                    "example": "Выставка импрессионистов"
                },
                "valid": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "jsonreqresp.TicketPurchaseResponse": {
            "type": "object",
            "properties": {
                "customerEmail": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "eventId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "purchaseDate": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "jsonreqresp.TxTicketPurchaseResponse": {
            "type": "object",
            "properties": {
                "cntTickets": {
                    "type": "integer"
                },
                "expiredAt": {
                    "type": "string"
                },
                "ticketPurchase": {
                    "$ref": "#/definitions/jsonreqresp.TicketPurchaseResponse"
                }
            }
        },
        "jsonreqresp.UpdateArtworkRequest": {
            "type": "object",
            "required": [
                "authorID",
                "collectionID",
                "creationYear",
                "id",
                "material",
                "size",
                "technic",
                "title"
            ],
            "properties": {
                "authorID": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                },
                "collectionID": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                },
                "creationYear": {
                    "type": "integer",
                    "maximum": 2100,
                    "example": 1889
                },
                "id": {
                    "type": "string",
                    "example": "44a315d0-663c-4813-92a6-d7977c2f2aba"
                },
                "material": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Холст, масляные краски"
                },
                "size": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "73.7 × 92.1 см"
                },
                "technic": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Масло, холст"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Звёздная ночь"
                }
            }
        },
        "jsonreqresp.UpdateAuthorRequest": {
            "type": "object",
            "required": [
                "birthYear",
                "id",
                "name"
            ],
            "properties": {
                "birthYear": {
                    "description": "Обязательное, \u003e= 1000",
                    "type": "integer",
                    "minimum": 1000,
                    "example": 1853
                },
                "deathYear": {
                    "description": "Опциональное, \u003e= BirthYear",
                    "type": "integer",
                    "example": 1890
                },
                "id": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                },
                "name": {
                    "description": "Обязательное, 2-100 символов",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "Винсент Ван Гог"
                }
            }
        },
        "jsonreqresp.UpdateCollectionRequest": {
            "type": "object",
            "required": [
                "id",
                "title"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                },
                "title": {
                    "description": "Обязательное, 2-255 символов",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2,
                    "example": "Музей современного искусства"
                }
            }
        },
        "jsonreqresp.UpdateEventRequest": {
            "type": "object",
            "required": [
                "address",
                "canVisit",
                "cntTickets",
                "dateBegin",
                "dateEnd",
                "id",
                "title"
            ],
            "properties": {
                "address": {
                    "type": "string",
                    "maxLength": 500,
                    "example": "ул. Пречистенка, 12/2"
                },
                "canVisit": {
                    "type": "boolean",
                    "example": true
                },
                "cntTickets": {
                    "type": "integer",
                    "minimum": 0,
                    "example": 100
                },
                "dateBegin": {
                    "type": "string",
                    "example": "2023-06-15T10:00:00Z"
                },
                "dateEnd": {
                    "type": "string",
                    "example": "2023-09-20T18:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "44a315d0-663c-4813-92a6-d7977c2f2aba"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Ночная выставка"
                }
            }
        },
        "jsonreqresp.UpdateValidEmployeeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "valid": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}