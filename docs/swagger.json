{
    "swagger": "2.0",
    "info": {
        "description": "API для системы учета произведений искусств",
        "title": "Museum",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/admin/employeelist/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of all employees",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get all employees by admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.EmployeeResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/admin/employeelist/change-rights": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Change employee valid field",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Change employee rights",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.UpdateValidEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success update"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                }
            }
        },
        "/admin/employeelist/register-employee": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Register a new employee",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Register employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Register credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The employee registered"
                    },
                    "400": {
                        "description": "Wrong input parameters"
                    },
                    "401": {
                        "description": "Auth error"
                    },
                    "409": {
                        "description": "Attempt to re-register"
                    }
                }
            }
        },
        "/auth-admin/login": {
            "post": {
                "description": "Authenticates a admin and return access token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "auth-admin"
                ],
                "summary": "Login admin",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The admin has been authenticated"
                    },
                    "400": {
                        "description": "Wrong input parameters"
                    },
                    "401": {
                        "description": "Auth error"
                    },
                    "403": {
                        "description": "Has no rights"
                    }
                }
            }
        },
        "/auth-admin/register": {
            "post": {
                "description": "Register a new admin",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "auth-admin"
                ],
                "summary": "Register admin",
                "parameters": [
                    {
                        "description": "Register credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterAdminRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The admin registered"
                    },
                    "400": {
                        "description": "Wrong input parameters"
                    },
                    "401": {
                        "description": "Auth error"
                    }
                }
            }
        },
        "/auth-employee/login": {
            "post": {
                "description": "Authenticates a employee and return access token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "auth-employee"
                ],
                "summary": "Login employee",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginEmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The employee has been authenticated"
                    },
                    "400": {
                        "description": "Wrong input parameters"
                    },
                    "401": {
                        "description": "Auth error"
                    },
                    "403": {
                        "description": "Has no rights"
                    }
                }
            }
        },
        "/auth-user/login": {
            "post": {
                "description": "Authenticates a user and return access token",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "auth-user"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user has been authenticated"
                    },
                    "400": {
                        "description": "Wrong input parameters"
                    },
                    "401": {
                        "description": "Auth error"
                    }
                }
            }
        },
        "/auth-user/register": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "auth-user"
                ],
                "summary": "Register user",
                "parameters": [
                    {
                        "description": "Register credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The user registered"
                    },
                    "400": {
                        "description": "Wrong input parameters"
                    },
                    "401": {
                        "description": "Auth error"
                    },
                    "409": {
                        "description": "Attempt to re-register"
                    }
                }
            }
        },
        "/employee/artworks/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add artwork with [new] author and [new] collection. If author or collection ID = \"\", an it will be created.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Add artwork by employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "New Artwork with [new] author and [new] collection",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.ArtworkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Artworks added"
                    },
                    "400": {
                        "description": "Wrong input parameters"
                    }
                }
            }
        },
        "/employee/artworks/all": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Retrieves a list of all artworks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Get all artworks by employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/jsonreqresp.ArtworkResponse"
                            }
                        }
                    }
                }
            }
        },
        "/employee/artworks/update": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update artwork with [new] author and [new] collection. If author or collection ID = \"\", an it will be created.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update artwork by employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bearer {token}",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updating Artwork with [new] author and [new] collection",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/jsonreqresp.UpdateArtworkRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Artwork updated"
                    },
                    "400": {
                        "description": "Wrong input parameters"
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginAdminRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "12345678"
                }
            }
        },
        "auth.LoginEmployeeRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "elogin"
                },
                "password": {
                    "type": "string",
                    "minLength": 4,
                    "example": "12345678"
                }
            }
        },
        "auth.LoginUserRequest": {
            "type": "object",
            "required": [
                "login",
                "password"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "ulogin"
                },
                "password": {
                    "type": "string",
                    "minLength": 4,
                    "example": "12345678"
                }
            }
        },
        "auth.RegisterAdminRequest": {
            "type": "object",
            "required": [
                "adminname",
                "login",
                "password"
            ],
            "properties": {
                "adminname": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "admin"
                },
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "admin"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "12345678"
                }
            }
        },
        "auth.RegisterEmployeeRequest": {
            "type": "object",
            "required": [
                "login",
                "password",
                "username"
            ],
            "properties": {
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "elogin"
                },
                "password": {
                    "type": "string",
                    "minLength": 4,
                    "example": "12345678"
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "ename"
                }
            }
        },
        "auth.RegisterUserRequest": {
            "type": "object",
            "required": [
                "email",
                "login",
                "password",
                "subscribe_email",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 6,
                    "example": "uuser@test.ru"
                },
                "login": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4,
                    "example": "ulogin"
                },
                "password": {
                    "type": "string",
                    "minLength": 4,
                    "example": "12345678"
                },
                "subscribe_email": {
                    "type": "boolean",
                    "example": true
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "uname"
                }
            }
        },
        "jsonreqresp.ArtworkRequest": {
            "type": "object",
            "required": [
                "author",
                "collectionId",
                "creationYear",
                "material",
                "size",
                "technic",
                "title"
            ],
            "properties": {
                "author": {
                    "$ref": "#/definitions/jsonreqresp.AuthorRequest"
                },
                "collectionId": {
                    "$ref": "#/definitions/jsonreqresp.CollectionRequest"
                },
                "creationYear": {
                    "type": "integer",
                    "maximum": 2100,
                    "example": 1889
                },
                "material": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Холст, масляные краски"
                },
                "size": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "73.7 × 92.1 см"
                },
                "technic": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Масло, холст"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Звёздная ночь"
                }
            }
        },
        "jsonreqresp.ArtworkResponse": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/jsonreqresp.AuthorResponse"
                },
                "collection": {
                    "$ref": "#/definitions/jsonreqresp.CollectionResponse"
                },
                "creationYear": {
                    "type": "integer",
                    "example": 1503
                },
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "material": {
                    "type": "string",
                    "example": "Poplar wood"
                },
                "size": {
                    "type": "string",
                    "example": "77 cm × 53 cm"
                },
                "technic": {
                    "type": "string",
                    "example": "Oil painting"
                },
                "title": {
                    "type": "string",
                    "example": "Mona Lisa"
                }
            }
        },
        "jsonreqresp.AuthorRequest": {
            "type": "object",
            "required": [
                "birthYear",
                "name"
            ],
            "properties": {
                "birthYear": {
                    "description": "Обязательное, \u003e= 1000",
                    "type": "integer",
                    "minimum": 1000,
                    "example": 1853
                },
                "deathYear": {
                    "description": "Опциональное, \u003e= BirthYear",
                    "type": "integer",
                    "example": 1890
                },
                "id": {
                    "type": "string",
                    "example": "ba1df957-ed5e-4694-8766-c5ec5806e5e7"
                },
                "name": {
                    "description": "Обязательное, 2-100 символов",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2,
                    "example": "Винсент Ван Гог"
                }
            }
        },
        "jsonreqresp.AuthorResponse": {
            "type": "object",
            "properties": {
                "birthYear": {
                    "type": "integer",
                    "example": 1452
                },
                "deathYear": {
                    "type": "integer",
                    "example": 1519
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "type": "string",
                    "example": "Leonardo da Vinci"
                }
            }
        },
        "jsonreqresp.CollectionRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "cfd9ff5d-cb37-407c-b043-288a482e9239"
                },
                "title": {
                    "description": "Обязательное, 2-255 символов",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2,
                    "example": "Музей современного искусства"
                }
            }
        },
        "jsonreqresp.CollectionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "aa1e8400-e29b-41d4-a716-446655441111"
                },
                "title": {
                    "type": "string",
                    "example": "Louvre Museum Collection"
                }
            }
        },
        "jsonreqresp.EmployeeResponse": {
            "type": "object",
            "properties": {
                "adminId": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655443333"
                },
                "createdAt": {
                    "type": "string",
                    "example": "2023-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "login": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "username": {
                    "type": "string",
                    "example": "john doe"
                },
                "valid": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "jsonreqresp.UpdateArtworkRequest": {
            "type": "object",
            "required": [
                "author",
                "collectionId",
                "creationYear",
                "id",
                "material",
                "size",
                "technic",
                "title"
            ],
            "properties": {
                "author": {
                    "$ref": "#/definitions/jsonreqresp.AuthorRequest"
                },
                "collectionId": {
                    "$ref": "#/definitions/jsonreqresp.CollectionRequest"
                },
                "creationYear": {
                    "type": "integer",
                    "maximum": 2100,
                    "example": 1889
                },
                "id": {
                    "type": "string"
                },
                "material": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Холст, масляные краски"
                },
                "size": {
                    "type": "string",
                    "maxLength": 50,
                    "example": "73.7 × 92.1 см"
                },
                "technic": {
                    "type": "string",
                    "maxLength": 100,
                    "example": "Масло, холст"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "example": "Звёздная ночь"
                }
            }
        },
        "jsonreqresp.UpdateValidEmployeeRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "bb2e8400-e29b-41d4-a716-446655442222"
                },
                "valid": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}